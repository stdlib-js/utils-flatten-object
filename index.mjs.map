{"version":3,"file":"index.mjs","sources":["../lib/defaults.js","../lib/validate.js","../lib/recurse.js","../lib/flatten.js","../lib/main.js","../lib/factory.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport FLOAT64_MAX from '@stdlib/constants-float64-max';\n\n\n// MAIN //\n\nvar defaults = {\n\t'delimiter': '.',\n\t'depth': FLOAT64_MAX,\n\t'copy': false\n};\n\n\n// EXPORTS //\n\nexport default defaults;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert-is-plain-object';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport { isPrimitive as isString } from '@stdlib/assert-is-string';\nimport { isPrimitive as isBoolean } from '@stdlib/assert-is-boolean';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert-is-nonnegative-integer';\nimport format from '@stdlib/error-tools-fmtprodmsg';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination for function options\n* @param {Options} options - function options\n* @param {NonNegativeInteger} [options.depth] - depth to flatten\n* @param {boolean} [options.copy] - boolean indicating whether to deep copy\n* @param {boolean} [options.flattenArrays] - boolean indicating whether to flatten arrays\n* @param {string} [options.delimiter] - key path delimiter\n* @returns {(Error|null)} error or null\n*\n* @example\n* var opts = {};\n* var options = {\n*     'depth': 10,\n*     'copy': false,\n*     'delimiter': '|',\n*     'flattenArrays': false\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( '0jn2h', options ) );\n\t}\n\tif ( hasOwnProp( options, 'depth' ) ) {\n\t\topts.depth = options.depth;\n\t\tif ( !isNonNegativeInteger( opts.depth ) ) {\n\t\t\treturn new TypeError( format( '0jn35', 'depth', opts.depth ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'copy' ) ) {\n\t\topts.copy = options.copy;\n\t\tif ( !isBoolean( opts.copy ) ) {\n\t\t\treturn new TypeError( format( '0jn30', 'copy', opts.copy ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'flattenArrays' ) ) {\n\t\topts.flattenArrays = options.flattenArrays;\n\t\tif ( !isBoolean( opts.flattenArrays ) ) {\n\t\t\treturn new TypeError( format( '0jn30', 'flattenArrays', opts.flattenArrays ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'delimiter' ) ) {\n\t\topts.delimiter = options.delimiter;\n\t\tif ( !isString( opts.delimiter ) ) {\n\t\t\treturn new TypeError( format( '0jn2i', 'delimiter', opts.delimiter ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport objectKeys from '@stdlib/utils-keys';\nimport isPlainObject from '@stdlib/assert-is-plain-object';\nimport isArray from '@stdlib/assert-is-array';\n\n\n// MAIN //\n\n/**\n* Recursively flattens an object.\n*\n* @private\n* @param {Object} out - output object\n* @param {ObjectLike} obj - input object\n* @param {string} prefix - key prefix\n* @param {NonNegativeInteger} depth - recursion depth\n* @param {Options} opts - options\n* @param {boolean} opts.flattenArrays - boolean indicating whether to flatten arrays\n* @param {string} opts.delimiter - key path delimiter\n* @returns {Object} output object\n*/\nfunction recurse( out, obj, prefix, depth, opts ) {\n\tvar keys;\n\tvar val;\n\tvar key;\n\tvar i;\n\tif ( prefix ) {\n\t\tprefix += opts.delimiter;\n\t}\n\tkeys = objectKeys( obj );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tval = obj[ keys[i] ];\n\t\tkey = prefix + keys[ i ];\n\t\tif ( depth ) {\n\t\t\tif (\n\t\t\t\t(isPlainObject( val ) && objectKeys( val ).length) ||\n\t\t\t\t(opts.flattenArrays && isArray( val ))\n\t\t\t) {\n\t\t\t\trecurse( out, val, key, depth-1, opts );\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t\tout[ key ] = val;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default recurse;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport copy from '@stdlib/utils-copy';\nimport recurse from './recurse.js';\n\n\n// MAIN //\n\n/**\n* Flattens an object.\n*\n* @private\n* @param {ObjectLike} obj - object to flatten\n* @param {Object} opts - options\n* @param {NonNegativeInteger} opts.depth - maximum depth to flatten\n* @param {boolean} opts.copy - boolean indicating whether to deep copy\n* @param {boolean} opts.flattenArrays - boolean indicating whether to flatten arrays\n* @param {string} opts.delimiter - key path delimiter\n* @returns {Object} flattened object\n*/\nfunction flatten( obj, opts ) {\n\tvar out;\n\tif ( opts.depth === 0 ) {\n\t\tout = obj;\n\t} else {\n\t\tout = recurse( {}, obj, '', opts.depth, opts );\n\t}\n\tif ( opts.copy ) {\n\t\treturn copy( out );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default flatten;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObjectLike from '@stdlib/assert-is-object-like';\nimport format from '@stdlib/error-tools-fmtprodmsg';\nimport copy from '@stdlib/utils-copy';\nimport defaults from './defaults.js';\nimport validate from './validate.js';\nimport flatten from './flatten.js';\n\n\n// MAIN //\n\n/**\n* Flattens an object.\n*\n* @param {ObjectLike} obj - object to flatten\n* @param {Options} [options] - function options\n* @param {NonNegativeInteger} [options.depth] - maximum depth to flatten\n* @param {boolean} [options.copy=false] - boolean indicating whether to deep copy\n* @param {boolean} [options.flattenArrays=false] - boolean indicating whether to flatten arrays\n* @param {string} [options.delimiter='.'] - key path delimiter\n* @throws {TypeError} first argument must be object-like\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {ObjectLike} flattened object\n*\n* @example\n* var obj = {'a':{'b':{'c':'d'}}};\n*\n* var out = flattenObject( obj );\n* // returns {'a.b.c':'d'}\n*/\nfunction flattenObject( obj, options ) {\n\tvar opts;\n\tvar err;\n\tif ( !isObjectLike( obj ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object (except null). Value: `%s`.', obj ) );\n\t}\n\topts = copy( defaults );\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\treturn flatten( obj, opts );\n}\n\n\n// EXPORTS //\n\nexport default flattenObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObjectLike from '@stdlib/assert-is-object-like';\nimport format from '@stdlib/error-tools-fmtprodmsg';\nimport copy from '@stdlib/utils-copy';\nimport defaults from './defaults.js';\nimport validate from './validate.js';\nimport flatten from './flatten.js';\n\n\n// MAIN //\n\n/**\n* Returns a function to flatten an object.\n*\n* @param {Options} options - function options\n* @param {NonNegativeInteger} [options.depth] - maximum depth to flatten\n* @param {boolean} [options.copy=false] - boolean indicating whether to deep copy\n* @param {boolean} [options.flattenArrays=false] - boolean indicating whether to flatten arrays\n* @param {string} [options.delimiter='.'] - key path delimiter\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Function} flatten function\n*\n* @example\n* var flatten = factory({\n*     'copy': true,\n*     'delimiter': '|'\n* });\n*\n* var obj = {'a':{'b':{'c':'d'}}};\n* var out = flatten( obj );\n* // returns {'a|b|c':'d'}\n*/\nfunction factory( options ) {\n\tvar opts;\n\tvar err;\n\n\topts = copy( defaults );\n\terr = validate( opts, options );\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\treturn flattenObject;\n\n\t/**\n\t* Flattens an object.\n\t*\n\t* @private\n\t* @param {ObjectLike} obj - object to flatten\n\t* @throws {TypeError} first argument must be object-like\n\t* @returns {Object} flattened object\n\t*/\n\tfunction flattenObject( obj ) {\n\t\tif ( !isObjectLike( obj ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide an object (except null). Value: `%s`.', obj ) );\n\t\t}\n\t\treturn flatten( obj, opts );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Flatten an object.\n*\n* @module @stdlib/utils-flatten-object\n*\n* @example\n* import flattenObject from '@stdlib/utils-flatten-object';\n*\n* var obj = {'a':{'b':{'c':'d'}}};\n*\n* var out = flattenObject( obj );\n* // returns {'a.b.c':'d'}\n*\n* @example\n* import flattenObject from '@stdlib/utils-flatten-object';\n*\n* var flatten = flattenObject.factory({\n*     'depth': 2,\n*     'copy': true,\n*     'delimiter': '|'\n* });\n*\n* var obj = {'a':{'b':{'c':'d'}}};\n*\n* var out = flatten( obj );\n* // returns {'a|b':{'c':'d'}}\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n"],"names":["defaults","delimiter","depth","FLOAT64_MAX","copy","validate","opts","options","isObject","hasOwnProp","isNonNegativeInteger","TypeError","format","isBoolean","flattenArrays","isString","recurse","out","obj","prefix","keys","val","key","i","objectKeys","length","isPlainObject","isArray","flatten","flattenObject","err","isObjectLike","arguments","factory","setReadOnly","main"],"mappings":";;smCA2BA,IAAIA,EAAW,CACdC,UAAa,IACbC,MAASC,EACTC,MAAQ,GC2BT,SAASC,EAAUC,EAAMC,GACxB,OAAMC,EAAUD,GAGXE,EAAYF,EAAS,WACzBD,EAAKJ,MAAQK,EAAQL,OACfQ,EAAsBJ,EAAKJ,QACzB,IAAIS,UAAWC,EAAQ,QAAS,QAASN,EAAKJ,QAGlDO,EAAYF,EAAS,UACzBD,EAAKF,KAAOG,EAAQH,MACdS,EAAWP,EAAKF,OACd,IAAIO,UAAWC,EAAQ,QAAS,OAAQN,EAAKF,OAGjDK,EAAYF,EAAS,mBACzBD,EAAKQ,cAAgBP,EAAQO,eACvBD,EAAWP,EAAKQ,gBACd,IAAIH,UAAWC,EAAQ,QAAS,gBAAiBN,EAAKQ,gBAG1DL,EAAYF,EAAS,eACzBD,EAAKL,UAAYM,EAAQN,WACnBc,EAAUT,EAAKL,YACb,IAAIU,UAAWC,EAAQ,QAAS,YAAaN,EAAKL,YAGpD,KA1BC,IAAIU,UAAWC,EAAQ,QAASL,GA2BzC,CC5CA,SAASS,EAASC,EAAKC,EAAKC,EAAQjB,EAAOI,GAC1C,IAAIc,EACAC,EACAC,EACAC,EAKJ,IAJKJ,IACJA,GAAUb,EAAKL,WAEhBmB,EAAOI,EAAYN,GACbK,EAAI,EAAGA,EAAIH,EAAKK,OAAQF,IAC7BF,EAAMH,EAAKE,EAAKG,IAChBD,EAAMH,EAASC,EAAMG,GAChBrB,IAEFwB,EAAeL,IAASG,EAAYH,GAAMI,QAC1CnB,EAAKQ,eAAiBa,EAASN,IAEhCL,EAASC,EAAKI,EAAKC,EAAKpB,EAAM,EAAGI,GAInCW,EAAKK,GAAQD,EAEd,OAAOJ,CACR,CC1BA,SAASW,EAASV,EAAKZ,GACtB,IAAIW,EAMJ,OAJCA,EADmB,IAAfX,EAAKJ,MACHgB,EAEAF,EAAS,CAAA,EAAIE,EAAK,GAAIZ,EAAKJ,MAAOI,GAEpCA,EAAKF,KACFA,EAAMa,GAEPA,CACR,CCCA,SAASY,EAAeX,EAAKX,GAC5B,IAAID,EACAwB,EACJ,IAAMC,EAAcb,GACnB,MAAM,IAAIP,UAAWC,EAAQ,iFAAkFM,IAGhH,GADAZ,EAAOF,EAAMJ,GACRgC,UAAUP,OAAS,IACvBK,EAAMzB,EAAUC,EAAMC,IAErB,MAAMuB,EAGR,OAAOF,EAASV,EAAKZ,EACtB,CCZA,SAAS2B,EAAS1B,GACjB,IAAID,EACAwB,EAIJ,GADAA,EAAMzB,EADNC,EAAOF,EAAMJ,GACSO,GAErB,MAAMuB,EAEP,OAUA,SAAwBZ,GACvB,IAAMa,EAAcb,GACnB,MAAM,IAAIP,UAAWC,EAAQ,uEAAwEM,IAEtG,OAAOU,EAASV,EAAKZ,EACrB,CACF,CCtBA4B,EAAAC,EAAA,UAAAF"}