{
  "version": 3,
  "sources": ["../lib/defaults.js", "../lib/validate.js", "../lib/recurse.js", "../lib/flatten.js", "../lib/main.js", "../lib/factory.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar FLOAT64_MAX = require( '@stdlib/constants-float64-max' );\n\n\n// MAIN //\n\n/**\n* Returns default options.\n*\n* @private\n* @returns {Object} default options\n*/\nfunction defaults() {\n\treturn {\n\t\t'delimiter': '.',\n\t\t'depth': FLOAT64_MAX,\n\t\t'copy': false\n\t};\n}\n\n\n// EXPORTS //\n\nmodule.exports = defaults;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObject = require( '@stdlib/assert-is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar isBoolean = require( '@stdlib/assert-is-boolean' ).isPrimitive;\nvar isNonNegativeInteger = require( '@stdlib/assert-is-nonnegative-integer' ).isPrimitive;\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination for function options\n* @param {Options} options - function options\n* @param {NonNegativeInteger} [options.depth] - depth to flatten\n* @param {boolean} [options.copy] - boolean indicating whether to deep copy\n* @param {boolean} [options.flattenArrays] - boolean indicating whether to flatten arrays\n* @param {string} [options.delimiter] - key path delimiter\n* @returns {(Error|null)} error or null\n*\n* @example\n* var opts = {};\n* var options = {\n*     'depth': 10,\n*     'copy': false,\n*     'delimiter': '|',\n*     'flattenArrays': false\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'depth' ) ) {\n\t\topts.depth = options.depth;\n\t\tif ( !isNonNegativeInteger( opts.depth ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative integer. Option: `%s`.', 'depth', opts.depth ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'copy' ) ) {\n\t\topts.copy = options.copy;\n\t\tif ( !isBoolean( opts.copy ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'copy', opts.copy ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'flattenArrays' ) ) {\n\t\topts.flattenArrays = options.flattenArrays;\n\t\tif ( !isBoolean( opts.flattenArrays ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'flattenArrays', opts.flattenArrays ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'delimiter' ) ) {\n\t\topts.delimiter = options.delimiter;\n\t\tif ( !isString( opts.delimiter ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'delimiter', opts.delimiter ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar objectKeys = require( '@stdlib/utils-keys' );\nvar isPlainObject = require( '@stdlib/assert-is-plain-object' );\nvar isArray = require( '@stdlib/assert-is-array' );\n\n\n// MAIN //\n\n/**\n* Recursively flattens an object.\n*\n* @private\n* @param {Object} out - output object\n* @param {ObjectLike} obj - input object\n* @param {string} prefix - key prefix\n* @param {NonNegativeInteger} depth - recursion depth\n* @param {Options} opts - options\n* @param {boolean} opts.flattenArrays - boolean indicating whether to flatten arrays\n* @param {string} opts.delimiter - key path delimiter\n* @returns {Object} output object\n*/\nfunction recurse( out, obj, prefix, depth, opts ) {\n\tvar keys;\n\tvar val;\n\tvar key;\n\tvar i;\n\tif ( prefix ) {\n\t\tprefix += opts.delimiter;\n\t}\n\tkeys = objectKeys( obj );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tval = obj[ keys[i] ];\n\t\tkey = prefix + keys[ i ];\n\t\tif ( depth ) {\n\t\t\tif (\n\t\t\t\t(isPlainObject( val ) && objectKeys( val ).length) ||\n\t\t\t\t(opts.flattenArrays && isArray( val ))\n\t\t\t) {\n\t\t\t\trecurse( out, val, key, depth-1, opts );\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t\tout[ key ] = val;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = recurse;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar copy = require( '@stdlib/utils-copy' );\nvar recurse = require( './recurse.js' );\n\n\n// MAIN //\n\n/**\n* Flattens an object.\n*\n* @private\n* @param {ObjectLike} obj - object to flatten\n* @param {Object} opts - options\n* @param {NonNegativeInteger} opts.depth - maximum depth to flatten\n* @param {boolean} opts.copy - boolean indicating whether to deep copy\n* @param {boolean} opts.flattenArrays - boolean indicating whether to flatten arrays\n* @param {string} opts.delimiter - key path delimiter\n* @returns {Object} flattened object\n*/\nfunction flatten( obj, opts ) {\n\tvar out;\n\tif ( opts.depth === 0 ) {\n\t\tout = obj;\n\t} else {\n\t\tout = recurse( {}, obj, '', opts.depth, opts );\n\t}\n\tif ( opts.copy ) {\n\t\treturn copy( out );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = flatten;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObjectLike = require( '@stdlib/assert-is-object-like' );\nvar format = require( '@stdlib/string-format' );\nvar defaults = require( './defaults.js' );\nvar validate = require( './validate.js' );\nvar flatten = require( './flatten.js' );\n\n\n// MAIN //\n\n/**\n* Flattens an object.\n*\n* @param {ObjectLike} obj - object to flatten\n* @param {Options} [options] - function options\n* @param {NonNegativeInteger} [options.depth] - maximum depth to flatten\n* @param {boolean} [options.copy=false] - boolean indicating whether to deep copy\n* @param {boolean} [options.flattenArrays=false] - boolean indicating whether to flatten arrays\n* @param {string} [options.delimiter='.'] - key path delimiter\n* @throws {TypeError} first argument must be object-like\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {ObjectLike} flattened object\n*\n* @example\n* var obj = {'a':{'b':{'c':'d'}}};\n*\n* var out = flattenObject( obj );\n* // returns {'a.b.c':'d'}\n*/\nfunction flattenObject( obj, options ) {\n\tvar opts;\n\tvar err;\n\tif ( !isObjectLike( obj ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object (except null). Value: `%s`.', obj ) );\n\t}\n\topts = defaults();\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\treturn flatten( obj, opts );\n}\n\n\n// EXPORTS //\n\nmodule.exports = flattenObject;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObjectLike = require( '@stdlib/assert-is-object-like' );\nvar format = require( '@stdlib/string-format' );\nvar defaults = require( './defaults.js' );\nvar validate = require( './validate.js' );\nvar flatten = require( './flatten.js' );\n\n\n// MAIN //\n\n/**\n* Returns a function to flatten an object.\n*\n* @param {Options} options - function options\n* @param {NonNegativeInteger} [options.depth] - maximum depth to flatten\n* @param {boolean} [options.copy=false] - boolean indicating whether to deep copy\n* @param {boolean} [options.flattenArrays=false] - boolean indicating whether to flatten arrays\n* @param {string} [options.delimiter='.'] - key path delimiter\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Function} flatten function\n*\n* @example\n* var flatten = factory({\n*     'copy': true,\n*     'delimiter': '|'\n* });\n*\n* var obj = {'a':{'b':{'c':'d'}}};\n* var out = flatten( obj );\n* // throws <RangeError>\n*/\nfunction factory( options ) {\n\tvar opts;\n\tvar err;\n\n\topts = defaults();\n\terr = validate( opts, options );\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\treturn flattenObject;\n\n\t/**\n\t* Flattens an object.\n\t*\n\t* @private\n\t* @param {ObjectLike} obj - object to flatten\n\t* @throws {TypeError} first argument must be object-like\n\t* @returns {Object} flattened object\n\t*/\n\tfunction flattenObject( obj ) {\n\t\tif ( !isObjectLike( obj ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide an object (except null). Value: `%s`.', obj ) );\n\t\t}\n\t\treturn flatten( obj, opts );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Flatten an object.\n*\n* @module @stdlib/utils-flatten-object\n*\n* @example\n* var flattenObject = require( '@stdlib/utils-flatten-object' );\n*\n* var obj = {'a':{'b':{'c':'d'}}};\n*\n* var out = flattenObject( obj );\n* // returns {'a.b.c':'d'}\n*\n* @example\n* var flattenObject = require( '@stdlib/utils-flatten-object' );\n*\n* var flatten = flattenObject.factory({\n*     'depth': 2,\n*     'copy': true,\n*     'delimiter': '|'\n* });\n*\n* var obj = {'a':{'b':{'c':'d'}}};\n*\n* var out = flatten( obj );\n* // returns {'a|b':{'c':'d'}}\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "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",
  "names": ["require_defaults", "__commonJSMin", "exports", "module", "FLOAT64_MAX", "defaults", "require_validate", "__commonJSMin", "exports", "module", "isObject", "hasOwnProp", "isString", "isBoolean", "isNonNegativeInteger", "format", "validate", "opts", "options", "require_recurse", "__commonJSMin", "exports", "module", "objectKeys", "isPlainObject", "isArray", "recurse", "out", "obj", "prefix", "depth", "opts", "keys", "val", "key", "i", "require_flatten", "__commonJSMin", "exports", "module", "copy", "recurse", "flatten", "obj", "opts", "out", "require_main", "__commonJSMin", "exports", "module", "isObjectLike", "format", "defaults", "validate", "flatten", "flattenObject", "obj", "options", "opts", "err", "require_factory", "__commonJSMin", "exports", "module", "isObjectLike", "format", "defaults", "validate", "flatten", "factory", "options", "opts", "err", "flattenObject", "obj", "setReadOnly", "main", "factory"]
}
